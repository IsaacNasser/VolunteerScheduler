DROP TABLE PERSON IF EXISTS;
CREATE MEMORY TABLE PERSON(
  P_EMAIL         VARCHAR(255) NOT NULL,
  P_FIRSTNAME     VARCHAR(255) NOT NULL,
  P_LASTNAME      VARCHAR(255) NOT NULL,
  P_ADDRESS       VARCHAR(255),
  P_CITY          VARCHAR(255),
  P_STATE         VARCHAR(2),
  P_ZIP           VARCHAR(5),
  P_DOB           DATE NOT NULL, -- DATE OF BIRTH
  PRIMARY KEY(P_EMAIL)
);

DROP TABLE VOLUNTEER IF EXISTS;
CREATE MEMORY TABLE VOLUNTEER(
  V_EMAIL         VARCHAR(255) NOT NULL,
  PRIMARY KEY (V_EMAIL),
  FOREIGN KEY (V_EMAIL) REFERENCES PERSON
);

DROP TABLE STUDENT IF EXISTS;
CREATE MEMORY TABLE STUDENT(
  S_EMAIL         VARCHAR(255) NOT NULL,
  S_SCHOOL        VARCHAR(255) NOT NULL,
  S_MAJOR         VARCHAR(255) NOT NULL,
  S_GRADYEAR      INTEGER NOT NULL,
  S_ID            VARCHAR(255) NOT NULL,
  PRIMARY KEY (S_EMAIL),
  FOREIGN KEY (S_EMAIL) REFERENCES VOLUNTEER
);

DROP TABLE AVAILABLETIME IF EXISTS;
CREATE MEMORY TABLE AVAILABLETIME(
  AT_VOLUNTEER    VARCHAR(255) NOT NULL, -- EMAIL OF VOLUNTEER
  AT_STARTTIME    DATETIME NOT NULL,
  AT_ENDTIME      DATETIME NOT NULL,
  PRIMARY KEY (AT_VOLUNTEER, AT_STARTTIME, AT_ENDTIME),
  FOREIGN KEY (AT_VOLUNTEER) REFERENCES VOLUNTEER
);

DROP TABLE WORKER IF EXISTS;
CREATE MEMORY TABLE WORKER(
  W_EMAIL         VARCHAR(255) NOT NULL,
  W_POSITION      VARCHAR(255), -- POSITION IN BUSINESS (CEO, CFO, ETC.)
  PRIMARY KEY (W_EMAIL),
  FOREIGN KEY (W_EMAIL) REFERENCES PERSON
);

DROP TABLE LOGIN IF EXISTS;
CREATE MEMORY TABLE LOGIN(
  L_EMAIL         VARCHAR(255), -- EMAIL
  L_PASSWORD      VARCHAR(255), -- HASHED PASSWORD
  L_HASH          VARCHAR(255), -- HASH USED TO HASH PASSWORD
  PRIMARY KEY (L_EMAIL),
  FOREIGN KEY (L_EMAIL) REFERENCES PERSON
);

DROP TABLE ORGANIZATION IF EXISTS;
CREATE MEMORY TABLE ORGANIZATION(
  O_ID            INTEGER NOT NULL, -- UNIQUE ID
  O_NAME          VARCHAR(255) NOT NULL,
  O_DESCRIPTION   VARCHAR(255),
  O_ADDRESS       VARCHAR(255) NOT NULL,
  O_CITY          VARCHAR(255) NOT NULL,
  O_STATE         VARCHAR(2) NOT NULL,
  O_ZIP           VARCHAR(5) NOT NULL,
  O_ORGANIZER     VARCHAR(255) NOT NULL, -- EMAIL OF WORKER IN CHARGE
  PRIMARY KEY (O_ID),
  FOREIGN KEY (O_ORGANIZER) REFERENCES WORKER
);

DROP TABLE TAG IF EXISTS;
CREATE MEMORY TABLE TAG(
  T_NAME          VARCHAR(255) NOT NULL,
  PRIMARY KEY (T_NAME)
);

DROP TABLE ORGANIZATIONTAG IF EXISTS;
CREATE MEMORY TABLE ORGANIZATIONTAG(
  OT_ORGANIZATION INTEGER NOT NULL, -- ORGANIZATION ID
  OT_TAG          VARCHAR(255) NOT NULL, -- TAG
  PRIMARY KEY (OT_ORGANIZATION, OT_TAG),
  FOREIGN KEY (OT_TAG) REFERENCES TAG,
  FOREIGN KEY (OT_ORGANIZATION) REFERENCES ORGANIZATION
);

DROP TABLE VOLUNTEERTAG IF EXISTS;
CREATE MEMORY TABLE VOLUNTEERTAG(
  VT_VOLUNTEER    VARCHAR(255) NOT NULL, -- EMAIL OF VOLUNTEER
  VT_TAG          VARCHAR(255) NOT NULL, -- TAG
  PRIMARY KEY (VT_VOLUNTEER, VT_TAG),
  FOREIGN KEY (VT_VOLUNTEER) REFERENCES VOLUNTEER,
  FOREIGN KEY (VT_TAG) REFERENCES TAG
);

DROP TABLE EVENT IF EXISTS;
CREATE MEMORY TABLE EVENT(
  E_ID            INTEGER NOT NULL, -- EVENT ID
  E_DATETIME      DATETIME NOT NULL,
  E_NAME          VARCHAR(255) NOT NULL,
  E_DESCRIPTION   VARCHAR(255),
  E_ORGANIZATION  INTEGER NOT NULL, -- ID OF ORGANIZATION
  E_EMPLOYEEORG   VARCHAR(255), -- EMAIL OF SPECIFIC EMPLOYEE IN CHARGE
  PRIMARY KEY (E_ID),
  FOREIGN KEY (E_ORGANIZATION) REFERENCES ORGANIZATION,
  FOREIGN KEY (E_EMPLOYEEORG) REFERENCES WORKER
);

DROP TABLE VOLUNTEEREVENT IF EXISTS;
CREATE MEMORY TABLE VOLUNTEEREVENT(
  VE_ID           INTEGER NOT NULL, -- UNIQUE ID
  VE_VOLUNTEER    VARCHAR(255) NOT NULL, -- VOLUNTEER
  VE_EVENT        INTEGER NOT NULL, -- EVENT ID
  VE_HOURS        INTEGER NOT NULL, -- HOURS VOLUNTEERED
  PRIMARY KEY (VE_ID),
  FOREIGN KEY (VE_VOLUNTEER) REFERENCES VOLUNTEER,
  FOREIGN KEY (VE_EVENT) REFERENCES EVENT
);